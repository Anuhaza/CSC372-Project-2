int x -> 5
int y -> 7

bool comparison1 -> x gt y
* \\ Max = \\ *
if comparison1 then [ * x * ] else [ * y * ]


* \\ Sum = \\ *
int z -> x add y
* z *

* \\ Difference = \\ *
z -> y sub x
* z *

* \\ Product = \\ *
z -> y mul x
* z *

* \\ GCD = \\ *
: while loops
during x notequals y loops, if x gt y then [ x -> x sub y ] else [ y -> y sub x ]

* x *
* \\ \n \\ *

int u -> 12
int v -> 20

bool comparison2 -> u gt v
* \\ Max = \\ *
if comparison2 then [ * u * ] else [ * v * ]


* \\ Sum = \\ *
z -> u add v
* z *

* \\ Difference = \\ *
z -> v sub u
* z *

* \\ Product = \\ *
z -> u mul v
* z *

* \\ GCD = \\ *
: while loops
during u notequals v loops, if u gt v then [ u -> u sub v ] else [ v -> v sub u ]

* u *





: conditional example
if x gt y then [ x -> x sub y ] else [ y -> y sub x ]