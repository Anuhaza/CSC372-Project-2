: Variables that can be integers
int x -> 3
int y -> 2

: basic integer expressions with basic operators: addition
int sum -> 1 add 2

: basic integer expressions with basic operators: subtraction
int diff -> 4 sub 2

: basic integer expressions with basic operators: multiplication
int prod -> 1 mul 3

: basic integer expressions with basic operators: division
int result -> 4 div 2

: basic integer expressions with basic operators: modulus
int remainder -> 4 mod 2

: variables that can be booleans
bool isValid -> T
bool isSorted -> F

: boolean expressions with basic operation: and
bool isSortedAndValid -> isValid and isSorted

: boolean expressions with basic operation: not
bool answer -> not T

: boolean expressions with basic operation: or
bool isSortedOrValid -> isValid or isSorted

: boolean expressions with comparison operator: gt
bool comparison1 -> 5 gt 3

: boolean expressions with comparison operator: lt
bool comparison2 -> 2 lt 3

: boolean expressions with comparison operator: equals
bool comparison3 -> 5 equals 3

: variables that can be Strings
string strVariable1 -> x add \\hi\\

: variables that can be Strings
string strVariable2 -> \\hello\\ add \\world\\

:printing to output
*Parser and Translator are working!*

: command line arguments
string var0 -> \\First command line argument is:\\ add <cmdline0>

: command line arguments
string var1 -> \\Second command line argument is:\\ add <cmdline1>

: loop with block
as int i loops through (0, 9), int w -> x add 1

:printing to output
*loop with block is working!*

: nested loop with block
as int i loops through (0, 9), as int j loops through (2, 4), as int k loops through (3, 5), int z -> x add 2

:printing to output
*nested loop with block is working!*

:conditional
if comparison1 then [ string str -> \\then\\ add \\block\\ ] else [ string str -> \\else\\ add \\block\\ ]

:conditional
if comparison2 then [ int sum1 -> 1 add 2 ] else [ int sum2 -> 1 add 2 ]

:printing to output
*conditional with block is working!*

:nested conditional
if comparison2 then [ if comparison3 then [ int sum1 -> 1 add 2 ] else [ int sum2 -> 1 add 2 ] ] else [ int sum2 -> 1 add 2 ]

:printing to output
*nested conditional with block is working!*
